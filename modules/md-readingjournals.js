// Generated by CoffeeScript 2.1.1
(function() {
  // outter codes access this module,step1:require this;step2 "nohm.register this"!
  var NohmModel, ReadingJournals, pug;

  pug = require('pug');

  NohmModel = (require('nohm')).NohmModel;

  ReadingJournals = (function() {
    class ReadingJournals extends NohmModel {
      
      // mod2form as 'Admin Class'
      static mod2form() {
        var form;
        // variables:['url','opts'] 
        form = 'p\nform(action= url,method=\'POST\' id="bootform")\n  - for(attr in opts){\n      .form-group\n        label(for= \'id\' + attr)= attr\n        - if(opts[attr].widget===\'textarea\')\n          textarea(class="form-control",rows="5",name=attr,id= \'id\' + attr) \n        - else{\n          - if(opts[attr].type === \'integer\') \n            - type=\'number\'\n          - else if(opts[attr].type === \'timestamp\')\n              -  type=\'datetime\'\n          - else\n            - type=\'text\'\n          input(class="form-control",id= \'id\' + attr,name= attr,type= type )\n        - }\n  - }\n    .form-group  \n      button(class="idoido btn btn-lg btn-default") Submit!  \np';
        return form;
      }

      static getDefinitions() {
        return ReadingJournals.definitions;
      }

    };

    ReadingJournals.version = '1.0';

    ReadingJournals.modelName = 'readingjournals';

    ReadingJournals.idGenerator = 'increment';

    ReadingJournals.definitions = {
      title: {
        type: 'string',
        unique: true,
        validations: [
          'notEmpty',
          {
            'name': 'length',
            options: {
              'min': 4,
              'max': 228
            }
          }
        ]
      },
      visits: {
        type: 'integer',
        index: true,
        defaultValue: 0
      },
      author: {
        type: 'string',
        validations: ['notEmpty']
      },
      tag: {
        type: 'integer',
        // type 1 is 'wenxue' 2 is 'zhentan',3 is 'kexue',4 is 'lishi'....
        defaultValue: 33,
        index: true
      },
      timestamp: {
        type: 'timestamp',
        validations: ['notEmpty'],
        index: true
      },
      journal: {
        widget: 'textarea',
        type: 'string',
        validations: ['notEmpty']
      },
      reading_history: {
        type: 'string',
        defaultValue: 'empty'
      }
    };

    return ReadingJournals;

  }).call(this);

  module.exports = ReadingJournals;

}).call(this);
