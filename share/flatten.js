// Generated by CoffeeScript 2.1.1
(function() {
  // written by al.di 2018
  // help function
  var flatten, fn, helpFuncs, j, len, objectSortByIndex, scanresults, type, types;

  types = ['isString', 'isArray', 'isObject', 'isNumber', 'isRegExp', 'isDate', 'isBoolean'];

  helpFuncs = {};

  fn = function(x) {
    // func name is 'x'
    return helpFuncs[x] = function(check) {
      return ('[object ' + x.substr(2) + ']') === (Object.prototype.toString.call(check));
    };
  };
  for (j = 0, len = types.length; j < len; j++) {
    type = types[j];
    fn(type);
  }

  objectSortByIndex = function(obj) {
    var counter, i, indexes, k, len1, orded, result;
    // in:an obj within score-like index
    // out(return): a sorted array.
    indexes = Object.keys(obj);
    orded = indexes.sort(function(a, b) {
      return a - b; //from min to max
    });
    result = {};
    counter = 0;
    for (k = 0, len1 = orded.length; k < len1; k++) {
      i = orded[k];
      result[counter++] = obj[i];
    }
    return result;
  };

  scanresults = {
    item1: 'just string',
    item2: {
      name: 'bob marley',
      year: 1985,
      title: 'no woman no cry',
      peoples: ['wang lin', 'hua shao', 'zeng ji yi', 'lu ping']
    },
    item3: 'just another string',
    item4: ['small', 'middle', 'large', 'extro large'],
    item5: 'just string,again'
  };

  flatten = function(original, store, major = 0, minor = 0) {
    var flag, i, index, k, len1, v;
    // store is an outter-level array variable.
    // major and minor initial all is 0,they maps the deep levels like filesystem
    flag = (function() {
      switch (false) {
        case !helpFuncs.isString(original):
          return 'string';
        case !helpFuncs.isArray(original):
          return 'array';
        case !helpFuncs.isObject(original):
          return 'object';
        case !helpFuncs.isNumber(original):
          return 'number';
        case !helpFuncs.isDate(original):
          return 'date';
      }
    })();
    if (flag === 'string' || flag === 'number' || flag === 'date') {
      index = major + '.' + minor;
      store[index] = original;
    } else if (flag === 'array') {
      for (i = k = 0, len1 = original.length; k < len1; i = ++k) {
        v = original[i];
        flatten(v, store, major + 1, minor++);
      }
    } else if (flag === 'object') {
      for (i in original) {
        v = original[i];
        flatten(v, store, major + 1, minor++);
      }
    } else {
      flatten('unknown', store, major, minor);
    }
    return null;
  };

  exports.flatten = flatten;

  exports.sample = scanresults;

  exports.objectSortByIndex = objectSortByIndex;

}).call(this);
